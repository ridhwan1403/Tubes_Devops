name: CI/CD Pipeline

on:
  push:
    branches:
      - feature/*
      - dev
  pull_request:
    branches:
      - dev
      - main

jobs:
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker and Docker Compose
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Verify Docker Installation
        run: |
          docker --version
          docker-compose --version

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  test:
    name: Test Stage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker and Docker Compose
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Verify Docker Installation
        run: |
          docker --version
          docker-compose --version

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Start Docker Compose
        run: docker-compose up -d db app

      - name: Debug Docker Services
        run: docker ps -a 

      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL to be ready..."
          sleep 30  

      - name: Run Tests
        env:
          DATABASE_URI: mysql+pymysql://dev:dev_password@127.0.0.1:3306/tubes_devsecop_app
          SECRET_KEY: test_secret_key
        run: pytest --cov=app tests/test_app.py

      - name: Stop Docker Compose
        run: docker-compose down

  sast:
    name: Security Scanning Stage (SAST)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Bandit
        run: pip install bandit

      - name: Run SAST with Bandit
        run: bandit -r app/

  dast:
    name: Testing DAST Stage
    runs-on: ubuntu-latest
    needs: sast
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker and Docker Compose
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Start Docker Compose
        run: docker-compose up -d app db

      - name: Wait for Application to be Ready
        run: |
          echo "Waiting for application to start..."
          sleep 30
          curl -sSf http://localhost:5000 || exit 7

      - name: Run DAST Scan with OWASP ZAP Docker
        run: |
          TARGET_URL="http://localhost:5000"
          docker run --rm -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py \
          -t $TARGET_URL -r zap_report.html -J zap_report.json

      - name: Save ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: ZAP Report
          path: zap_report.html

      - name: Stop Docker Compose
        run: docker-compose down      

  deploy:
    name: Deployment Stage
    runs-on: ubuntu-latest
    needs: dast
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker and Docker Compose
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Deploy to Staging
        run: |
          docker-compose -f docker-compose.yml up -d
