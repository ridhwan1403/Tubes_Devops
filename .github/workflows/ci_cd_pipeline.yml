name: CI/CD Pipeline

on:
  push:
    branches:
      - feature/new-feature
      - dev
  pull_request:
    branches:
      - dev
      - main

jobs:
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.14.0-alpha.3

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  test:
    name: Test Stage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.14.0-alpha.3

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Unit Tests with Coverage
        run: |
          pytest --cov=app --cov-report=html tests/

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/

  sast:
    name: Security Scanning Stage (SAST)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Bandit
        run: pip install bandit

      - name: Run SAST with Bandit
        run: bandit -r app/

  dast:
    name: Testing DAST Stage
    runs-on: ubuntu-latest
    needs: sast
    steps:
      - name: Start Application
        run: |
          python app.py &
          sleep 10

      - name: Install OWASP ZAP CLI
        run: |
          sudo apt-get update
          sudo apt-get install zaproxy -y
          pip install python-owasp-zap-v2.4

      - name: Run DAST Scan
        run: |
          zap-cli quick-scan --self-contained --start-options '-daemon -config api.disablekey=true' http://127.0.0.1:5000

  deploy:
    name: Deployment Stage
    runs-on: ubuntu-latest
    needs: dast
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          echo "Deploying to staging..."
          # Add deployment script (e.g., Docker, SSH)
